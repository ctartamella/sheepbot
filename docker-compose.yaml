version: "3"
services: 
  bot:
    build:
      dockerfile: ./src/SheepBot/Dockerfile
      context: .
      args:
        BUILD_MODE: ${BUILD_MODE:-Debug}
    image: ctartamella/sheepbot:${VERSION}
    container_name: sheepbot
    depends_on:
      - sqlserver
    environment:
      VERSION: ${VERSION}
      Environment: ${ENVIRONMENT}
      ConnectionStrings__Default: ${CONNECTION}
      iRacing__Email: ${IRACINGEMAIL}
      iRacing__Password: ${IRACINGPASSWORD}
      Discord__Token: ${DISCORDTOKEN}
    
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - SA_PASSWORD=${SAPASSWORD}
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    ports:
      - "5434:1433"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SAPASSWORD} -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    volumes:
      - sql_data:/var/opt/mssql/data 
      - sql_logs:/var/opt/mssql/log
      - sql_secrets:/var/opt/mssql/secrets

  sqlserver-init:
    image: dreitier/mssql-init-db-env:latest
    depends_on: 
      sqlserver:
        condition: service_healthy
    environment:
      DATABASE_HOST: sqlserver
      MASTER_LOGIN: sa
      MASTER_PASSWORD: ${SAPASSWORD}
      DATABASE_LOGIN: ${DBUSER}
      DATABASE_PASSWORD: ${DBPASSWORD}
      DATABASE_NAME: ${DBNAME}
      TRUST_SERVER_CERTIFICATE: 1

networks:
  default:
    driver: bridge
  global_dev_deploy:
    external: true
volumes:
  sql_data:
  sql_logs:
  sql_secrets: