name: Deploy Docker app
description: Deploy the application's Docker Compose file
inputs:
  environment:
    description: Environment name
    required: true
    default: DEV
  connection-string:
    required: true
  image-name:
    required: true
  discord-token:
    required: true
  iracing-email:
    required: true
  iracing-password:
    required: true
  db-host:
    required: true
  db-user:
    required: true
  db-name:
    required: true
  db-password:
    required: true
  sa-password:
    required: true
  docker-user:
    description: The username to use for Docker Hub
    required: true
  docker-password:
    description: The password used for Docker Hub
    required: true
  discord-webhook:
    description: The webhook used for Discord notifications
    required: true
runs:
  using: composite
  steps:
    - name: Retrieve Version
      uses: ./.github/actions/retrieve-version
      id: version

    - name: Deploy Database
      uses: ./.github/actions/deploy-database
      working-directory: ./deployment/database
      with:
        connection-string: ${{ inputs.connection-string }}

    - name: Deploy Docker
      uses: ./.github/actions/deploy-app
      working-directory: ./deployment/app
      with:
        image-name: ${{ inputs.image-name }}:${{ steps.version.outputs.version }}
        docker-user: ${{ inputs.docker-user }}
        docker-password: ${{ inputs.docker-password }}
        environment: ${{ inputs.environment }}
        version: ${{ steps.version.outputs.version }}
        connection-string: ${{ inputs.connection-string }}
        iracing-email: ${{ inputs.iracing-email }}
        iracing-password: ${{ inputs.iracing-password }}
        discord-token: ${{ inputs.discord-token }}
        db-host: ${{ inputs.db-host }}
        db-user: ${{ inputs.db-user }}
        db-name: ${{ inputs.db-name }}
        db-password: ${{ inputs.db-password }}
        sa-password: ${{ inputs.sa-password }}

    # - name: Notify Discord
    #   uses: Ilshidur/action-discord@master
    #   env:
    #     DISCORD_WEBHOOK: ${{ inputs.discord-webhook }}
    #   with:
    #     args: ${{ inputs.environment }} deployment complete.
