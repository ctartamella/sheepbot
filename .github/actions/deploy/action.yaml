name: Deploy Docker app
description: Deploy the application's Docker Compose file
inputs:
  environment:
    description: Environment name
    required: true
    default: DEV
  app-connection-string:
    required: true
  deploy-connection-string:
    required: true
  image-name:
    required: true
  discord-token:
    required: true
  iracing-email:
    required: true
  iracing-password:
    required: true
  db-host:
    required: true
  db-user:
    required: true
  db-name:
    required: true
  db-password:
    required: true
  sa-password:
    required: true
  docker-user:
    description: The username to use for Docker Hub
    required: true
  docker-password:
    description: The password used for Docker Hub
    required: true
  discord-webhook:
    description: The webhook used for Discord notifications
    required: true
runs:
  using: composite
  steps:
    - name: Retrieve Version
      uses: ./.github/actions/retrieve-version
      id: version

    - name: Populate Environment
      shell: bash
      run: |
        rm .env
        touch .env
        echo "VERSION=${{ steps.version.outputs.version }}" >> .env
        echo "ENVIRONMENT=${{ inputs.environment }}" >> .env
        echo "CONNECTION=${{ inputs.app-connection-string}}" >> .env
        echo "IRACINGEMAIL=${{ inputs.iracing-email }}" >> .env
        echo "IRACINGPASSWORD=${{ inputs.iracing-password }}" >> .env
        echo "DISCORDTOKEN=${{ inputs.discord-token }}" >> .env
        echo "DBHOST=${{ inputs.db-host }}" >> .env
        echo "DBUSER=${{ inputs.db-user }}" >> .env
        echo "DBNAME=${{ inputs.db-name }}" >> .env
        echo "DBPASSWORD=${{ inputs.db-password }}" >> .env
        echo "SAPASSWORD=${{ inputs.sa-password }}" >> .env

    - name: Deploy Database
      uses: ./.github/actions/deploy-database
      with:
        connection-string: ${{ inputs.deploy-connection-string }}

    - name: Deploy Docker
      uses: ./.github/actions/deploy-docker
      with:
        image-name: ${{ inputs.image-name }}:${{ steps.version.outputs.version }}
        docker-user: ${{ inputs.docker-user }}
        docker-password: ${{ inputs.docker-password }}

    - name: Notify Discord
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ inputs.discord-webhook }}
      with:
        args: ${{ inputs.environment }} deployment complete.
